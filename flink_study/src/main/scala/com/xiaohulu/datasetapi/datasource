DataSet API
分类：
    Source: 数据源创建初始数据集，例如来自文件或Java集合
    Transformation: 数据转换将一个或多个DataSet转换为新的DataSet
    Sink: 将计算结果存储或返回
DataSet Sources

基于文件的
    readTextFile(path)/ TextInputFormat- 按行读取文件并将其作为字符串返回。

    readTextFileWithValue(path)/ TextValueInputFormat- 按行读取文件并将它们作为StringValues返回。StringValues是可变字符串。

    readCsvFile(path)/ CsvInputFormat- 解析逗号（或其他字符）分隔字段的文件。返回元组或POJO的DataSet。支持基本java类型及其Value对应作为字段类型。

    readFileOfPrimitives(path, Class)/ PrimitiveInputFormat- 解析新行（或其他字符序列）分隔的原始数据类型（如String或）的文件Integer。

    readFileOfPrimitives(path, delimiter, Class)/ PrimitiveInputFormat- 解析新行（或其他字符序列）分隔的原始数据类型的文件，例如String或Integer使用给定的分隔符。

    readSequenceFile(Key, Value, path)/ SequenceFileInputFormat- 创建一个JobConf并从类型为SequenceFileInputFormat，Key class和Value类的指定路径中读取文件，并将它们作为Tuple2 <Key，Value>返回。

基于集合

    fromCollection(Collection) - 从Java Java.util.Collection创建数据集。集合中的所有数据元必须属于同一类型。

    fromCollection(Iterator, Class) - 从迭代器创建数据集。该类指定迭代器返回的数据元的数据类型。

    fromElements(T ...) - 根据给定的对象序列创建数据集。所有对象必须属于同一类型。

    fromParallelCollection(SplittableIterator, Class) - 并行地从迭代器创建数据集。该类指定迭代器返回的数据元的数据类型。

    generateSequence(from, to) - 并行生成给定间隔中的数字序列。

通用方法

    readFile(inputFormat, path)/ FileInputFormat- 接受文件输入格式。

    createInput(inputFormat)/ InputFormat- 接受通用输入格式。
