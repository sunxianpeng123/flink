Flink中的Time与Window
一、Time
    在Flink的流式处理中，会涉及到时间的不同概念
    Event Time（事件时间）：是事件创建的时间。它通常由事件中的时间戳描述，例如采集的日志数据中，每一条日志都会记录自己的生成时间，Flink通过时间戳分配器访问事件时间戳
    Ingestion Time（采集时间）：是数据进入Flink的时间
    Processing Time（处理时间）：是每一个执行基于时间操作的算子的本地系统时间，与机器相关，默认的时间属性就是Processing Time。
            例如一条日志进入Flink的时间为2017-11-12 10:00:00.123 到达window的系统时间为 2017-11-12 10:00:01.234，日志内容如下：2017-11-02 18:37:15.624 INFO Fair over to rm2
            对于业务来说，要统计1min内的故障日志个数，哪个时间是最有意义的？----- eventTime，因为我们要根据日志的生成时间进行统计。如果要想聚合，不可能对无解数据流进行聚合。

二、Window
    1、streaming流式计算是一种被设计用于处理处理无限数据集的数据处理引擎，而无限数据集是指一种不断增长的本质上无限的数据集，而window是一种切割无限数据为有限块进行处理的手段。
        Window是无限数据流处理的核心，Window将一个无限的stream拆分成有限大小的"buckets"桶，我们可以在这些桶上做计算操作。
        共有两类，五种时间窗口。

    2、Window类型（两类）
        2.1、CountWindow：按照指定的数据条数生成一个window，与时间无关

        2.2、TimeWindow：按照时间生成window。（按照Processing Time来划分Window）

        对于TimeWindow和CountWindow，可以根据窗口实现原理的不同分成三类：滚动窗口（Tumbling Window）、滑动窗口（Sliding Window）和会话窗口（Session Window）。
            （1）滚动窗口（Tumbling Windows）将数据依据固定的窗口长度对数据进行切分。

                特点：时间对齐，窗口长度固定，没有重叠。
                滚动窗口分配器将每个元素分配到一个指定窗口大小的窗口中，滚动窗口有一个固定的大小，并且不会出现重叠。

            （2）滑动窗口（Sliding Windows）滑动窗口是固定窗口的更广义的一种形式，滑动窗口由固定的窗口长度和滑动间隔组成。

                特点：时间对齐，窗口长度固定，有重叠。
                滑动窗口分配器将元素分配到固定长度的窗口中，与滚动窗口类似，窗口的大小由窗口大小参数来配置，另一个窗口滑动参数控制滑动窗口开始的频率。
                因此，滑动窗口如果滑动参数小于窗口大小的话，窗口是可以重叠的，在这种情况下元素会被分配到多个窗口中。
                使用场景：对最近一个时间段内的统计（求某接口最近5min的失败率来决定是否要报警。）

            （3）会话窗口（Session Windows）由一系列事件组合一个指定时间长度的timeout间隙组成。类似于web应用的session，也就是一段时间没有接收到新数据就会生成新的窗口。

                特点：时间无对齐。
                session 窗口分配器通过session活动来对元素进行分组，session窗口跟滚动窗口和滑动窗口相比，不会有重叠和固定的开始时间和结束时间的情况，相反，当它在一个固定的
                时间周期内不再收到元素，即非活动间隔产生，那这个窗口就会关闭。一个Session窗口通过一个session间隔来配置，这个session间隔定义了非活跃周期的长度，当这个非活跃
                周期产生，那么当前的session将关闭并且后续的元素将被分配到新的session窗口中去。